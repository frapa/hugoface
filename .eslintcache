[{"/home/francesco/Projects/javascript/oguh/src/index.js":"1","/home/francesco/Projects/javascript/oguh/src/services/login.js":"2","/home/francesco/Projects/javascript/oguh/src/components/Admin/Admin.js":"3","/home/francesco/Projects/javascript/oguh/src/components/Login/Login.js":"4","/home/francesco/Projects/javascript/oguh/src/components/Articles/Articles.js":"5","/home/francesco/Projects/javascript/oguh/src/components/Editor/Editor.js":"6","/home/francesco/Projects/javascript/oguh/src/services/git.js":"7","/home/francesco/Projects/javascript/oguh/src/services/articles.js":"8","/home/francesco/Projects/javascript/oguh/src/services/fs.js":"9"},{"size":1494,"mtime":1607871835649,"results":"10","hashOfConfig":"11"},{"size":427,"mtime":1607788490022,"results":"12","hashOfConfig":"11"},{"size":2090,"mtime":1608066837422,"results":"13","hashOfConfig":"11"},{"size":2459,"mtime":1607792498209,"results":"14","hashOfConfig":"11"},{"size":1601,"mtime":1607871835649,"results":"15","hashOfConfig":"11"},{"size":5030,"mtime":1608067186171,"results":"16","hashOfConfig":"11"},{"size":598,"mtime":1607793355220,"results":"17","hashOfConfig":"11"},{"size":2620,"mtime":1607895554001,"results":"18","hashOfConfig":"11"},{"size":130,"mtime":1607785017744,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"183kgl1",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"22"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"/home/francesco/Projects/javascript/oguh/src/index.js",[],["40","41"],"/home/francesco/Projects/javascript/oguh/src/services/login.js",[],"/home/francesco/Projects/javascript/oguh/src/components/Admin/Admin.js",["42"],"/home/francesco/Projects/javascript/oguh/src/components/Login/Login.js",[],"/home/francesco/Projects/javascript/oguh/src/components/Articles/Articles.js",[],"/home/francesco/Projects/javascript/oguh/src/components/Editor/Editor.js",["43"],"/home/francesco/Projects/javascript/oguh/src/services/git.js",[],"/home/francesco/Projects/javascript/oguh/src/services/articles.js",["44","45"],"import yaml from \"yaml\";\nimport toml from \"toml\";\n\nimport { pfs } from \"./fs\";\nimport { DIR } from \"./git\";\n\n// TODO: change this or make configurable\nconst ARTICLE_DIR = DIR + \"/content/post/\";\n\nfunction split(str, separator, limit) {\n  const parts = str.split(separator);\n  return [...parts.slice(0, limit), parts.slice(limit).join(separator)];\n}\n\nfunction parseArticle(filename, content) {\n  // TODO: support all front matter formats\n  content = content.trimStart();\n  let fields, body;\n  if (content.slice(0, 3) === \"---\") {\n    // YAML front matter\n    const [_, header, articleBody] = split(content, \"---\", 2);\n    fields = yaml.parse(header);\n    body = articleBody;\n  } else if (content.slice(0, 3) === \"+++\") {\n    // TOML front matter\n    const [_, header, articleBody] = split(content, \"+++\", 2);\n    fields = toml.parse(header);\n    body = articleBody;\n  } else if (content.slice(0, 2) === \"#+\") {\n    // ORG MODE front matter\n    throw new Error(\"Org mode front matter is not supported yet\");\n  } else if (content[0] === \"{\") {\n    // JSON front matter\n    throw new Error(\"JSON front matter is not supported yet\");\n  } else {\n    throw new Error(`Invalid front matter in file '${filename}'`);\n  }\n\n  if (fields.hasOwnProperty(\"date\")) {\n    fields[\"date\"] = new Date(fields[\"date\"]);\n  }\n\n  return {\n    filename,\n    ...fields,\n    body,\n  };\n}\n\nexport async function listArticles() {\n  // TODO: pagination\n  let files;\n  try {\n    files = await pfs.readdir(ARTICLE_DIR);\n  } catch {\n    return [];\n  }\n\n  const filesContent = await Promise.all(\n    files.map((filename) => pfs.readFile(ARTICLE_DIR + filename))\n  );\n\n  return filesContent.map((byteContent, i) => {\n    const content = new TextDecoder(\"utf-8\").decode(byteContent);\n    return parseArticle(files[i], content);\n  });\n}\n\nexport async function getArticle(filename) {\n  const byteContent = await pfs.readFile(ARTICLE_DIR + filename);\n  const content = new TextDecoder(\"utf-8\").decode(byteContent);\n  return parseArticle(filename, content);\n}\n\nexport async function saveArticle(article) {\n  const filename = article.filename;\n\n  if (!filename) {\n    console.error(article);\n    throw new Error(`filename cannot be empty, but is ${article.filename}`);\n  }\n\n  const body = article.body;\n  const frontMatter = JSON.parse(JSON.stringify(article));\n  delete frontMatter.filename;\n  delete frontMatter.body;\n\n  const yamlFrontMatter = yaml.stringify(frontMatter);\n  const content = `---\\n${yamlFrontMatter}\\n---\\n${body}`;\n\n  const byteContent = new TextEncoder(\"utf-8\").encode(content);\n  await pfs.writeFile(ARTICLE_DIR + filename, byteContent);\n}\n","/home/francesco/Projects/javascript/oguh/src/services/fs.js",[],{"ruleId":"46","replacedBy":"47"},{"ruleId":"48","replacedBy":"49"},{"ruleId":"50","severity":1,"message":"51","line":41,"column":11,"nodeType":"52","endLine":41,"endColumn":55},{"ruleId":"53","severity":1,"message":"54","line":83,"column":5,"nodeType":"55","messageId":"56","endLine":83,"endColumn":6},{"ruleId":"53","severity":1,"message":"57","line":21,"column":12,"nodeType":"55","messageId":"56","endLine":21,"endColumn":13},{"ruleId":"53","severity":1,"message":"57","line":26,"column":12,"nodeType":"55","messageId":"56","endLine":26,"endColumn":13},"no-native-reassign",["58"],"no-negated-in-lhs",["59"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-unused-vars","'i' is assigned a value but never used.","Identifier","unusedVar","'_' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]